cargo-features = ["per-package-target"]

[package]
name = "mutiny-wasm"
version = "0.2.4"
edition = "2021"
authors = ["Tony Giorgio <tony@mutinywallet.com>", "benthecarman <ben@mutinywallet.com>"]
forced-target = "wasm32-unknown-unknown"

[lib]
crate-type = ["cdylib"]

[dependencies]
mutiny-core = { path = "../mutiny-core" }

wasm-bindgen = "0.2.84"
serde-wasm-bindgen = "0.5.0"
wasm-bindgen-futures = "0.4.33"
serde = { version = "^1.0", features = ["derive"] }
serde_json = { version = "^1.0" }
bitcoin = { version = "0.29.2", default-features = false, features = ["serde", "secp-recovery"] }
bitcoin-waila = { git = "https://github.com/MutinyWallet/bitcoin-waila.git", branch = "no-std", default-features = false, features = ["no-std"] }
lightning-invoice = { version = "0.22", default-features = false, features = ["no-std"] }
thiserror = "1.0"
lnurl-rs = { version = "0.2", default-features = false }
wasm-logger = "0.2.0"
log = "0.4.17"
gloo-storage = "0.2.2"
web-sys = { version = "0.3.60", features = ["console"] }
bip39 = { version = "2.0.0" }
getrandom = { version = "0.2", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.33"
mockall = "0.11.2"

[features]
default = ["console_error_panic_hook"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = true
